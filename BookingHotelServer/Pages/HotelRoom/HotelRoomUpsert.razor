@page "/hootel-room/create"
@page "/hotel-room/edit/{Id:int}"
@inject IHotelRoomRepository HotelRoomRepository;
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime


<div class="row mt-2 mb-5">
    <h3 class="card-title text-info mb-3 ml-3">@Title Hotel Room</h3>
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <EditForm Model="@HotelRoomModel" OnValidSubmit="HandleHotelRoomUpsert">
                    <DataAnnotationsValidator/>
                    @*<ValidationSummary/>*@
                    <div class="">
                        <label>Name</label>
                        <InputText @bind-Value="@HotelRoomModel.Name" class="form-control"></InputText>
                        <ValidationMessage For="()=>HotelRoomModel.Name"></ValidationMessage>
                    </div>
                    <div class="">
                        <label>Occupancy</label>
                        <InputNumber @bind-Value="@HotelRoomModel.Occupancy" class="form-control"></InputNumber>
                        <ValidationMessage For="()=>HotelRoomModel.Occupancy"></ValidationMessage>
                    </div>
                    <div class="">
                        <label>Rate</label>
                        <InputNumber @bind-Value="@HotelRoomModel.RegularRate" class="form-control"></InputNumber>
                        <ValidationMessage For="()=>HotelRoomModel.RegularRate"></ValidationMessage>

                    </div>
                    <div class="">
                        <label>Sq Ft.</label>
                        <InputText @bind-Value="@HotelRoomModel.SqFt" class="form-control"></InputText>
                    </div>
                    <div class="mb-3">
                        <label>Details</label>
                        <InputTextArea @bind-Value="@HotelRoomModel.Details" class="form-control"></InputTextArea>
                    </div>
                    <div class="">
                        <button class="btn btn-outline-primary" >@Title</button>
                        <NavLink href="hotel-room" class="btn btn-outline-secondary">Back to Index</NavLink>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int? Id { get; set; }
    private HotelRoomDTO HotelRoomModel { get; set; } = new HotelRoomDTO();

    private string Title { get; set; } = "Create";

    protected override async Task OnInitializedAsync()
    {
        if (Id != null)
        {
            //Update
            Title = "Update";
            HotelRoomModel =await HotelRoomRepository.GetHotelRoom(Id.Value);
        }
        else
        {
            //create
            HotelRoomModel = new HotelRoomDTO();
        }
    }

    private async Task HandleHotelRoomUpsert()
    {
        try
        {
            var roomDetailsByName = await HotelRoomRepository.IsRoomUnique(HotelRoomModel.Name,HotelRoomModel.Id);
            if (roomDetailsByName != null)
            {
                 JsRuntime.SwAlert("error", "Room is already exists");
                return;
            }

            if (HotelRoomModel.Id != 0 && Title=="Update")
            {
                //Update
                await HotelRoomRepository.UpdateHotelRoom(HotelRoomModel.Id, HotelRoomModel);
                JsRuntime.SwAlert("success", "Room updated successfully");
            }
            else
            {
                //Create
                var roomDetailsByNameFromDb = await HotelRoomRepository.IsRoomUnique(HotelRoomModel.Name, HotelRoomModel.Id);
                if (roomDetailsByNameFromDb != null)
                {
                    JsRuntime.SwAlert("error", "Room is already exists");
                    return;
                }
                var createdRoom = await HotelRoomRepository.CreateHotelRoom(HotelRoomModel);
                JsRuntime.SwAlert("success", "Room created successfully");
            }
        }
        catch (Exception ex)
        {
            
            throw;
        }
        NavigationManager.NavigateTo("hotel-room");
    }

}
